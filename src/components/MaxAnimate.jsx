/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/maxAnimate.glb 
*/

import React, { useEffect, useRef } from "react";
import {
  useGLTF,
  useAnimations,
  PerspectiveCamera,
  OrbitControls,
} from "@react-three/drei";

{
  /* loading Max */
}
const Avatar = () => {
  const avatar = useGLTF("/maxAnimate.glb");
  const { actions, names } = useAnimations(avatar.animations, avatar.scene);
  // console.log(actions);
  useEffect(() => {
    actions.wavingMax.play();
  }, []);

  return (
    <>
      {/* lights */}
      <PerspectiveCamera makeDefault position={[-7, 3, 19]} />
      {/* <OrbitControls /> */}
      <ambientLight intensity={1.5} />
      <spotLight
        args={["#fff", 200, 70, 1.5]}
        position={[-1, 7, 7]}
        castShadow
      />

      {/* displaying max */}
      <group position={[-7.7, -4.8, 0]} rotation={[0, -6.2, 0]} scale={8.1} castShadow>
        <primitive object={avatar.scene} />
      </group>
    </>
  );
};

// loading max with component//not loading
const MaxAnimate = (props) => {
  // const group = useRef()
  // const { nodes, materials, animations } = useGLTF('/maxAnimate.glb')
  // const { actions } = useAnimations(animations, group)
  return (
    // <group ref={group} {...props} dispose={null}>
    //   <group name="Scene">
    //     <group name="Armature001">
    //       <primitive object={nodes.Hips} />
    //       <skinnedMesh name="EyeLeft001" geometry={nodes.EyeLeft001.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft001.skeleton} />
    //       <skinnedMesh name="EyeRight001" geometry={nodes.EyeRight001.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight001.skeleton} />
    //       <skinnedMesh name="Wolf3D_Body001" geometry={nodes.Wolf3D_Body001.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body001.skeleton} />
    //       <skinnedMesh name="Wolf3D_Head001" geometry={nodes.Wolf3D_Head001.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head001.skeleton} />
    //       <skinnedMesh name="Wolf3D_Outfit_Bottom001" geometry={nodes.Wolf3D_Outfit_Bottom001.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom001.skeleton} />
    //       <skinnedMesh name="Wolf3D_Outfit_Footwear001" geometry={nodes.Wolf3D_Outfit_Footwear001.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear001.skeleton} />
    //       <skinnedMesh name="Wolf3D_Outfit_Top001" geometry={nodes.Wolf3D_Outfit_Top001.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top001.skeleton} />
    //       <skinnedMesh name="Wolf3D_Teeth001" geometry={nodes.Wolf3D_Teeth001.geometry} material={materials['Wolf3D_Teeth.001']} skeleton={nodes.Wolf3D_Teeth001.skeleton} />
    //     </group>
    //   </group>
    // </group>
    <Avatar />
  );
};

export default MaxAnimate;

useGLTF.preload("/maxAnimate.glb");
